@using BootcampTrainee.Models

@model User

<!-- password -->
<script type="text/javascript">
    function mouseoverPass(obj) {
        var obj = document.getElementById('password');
        obj.type = "text";
    }

    function mouseoutPass(obj) {
        var obj = document.getElementById('password');
        obj.type = 'password';
    }
    function mouseoverConfPass(obj) {
        var obj = document.getElementById('Confpassword');
        obj.type = "text";
    }

    function mouseoutConfPass(obj) {
        var obj = document.getElementById('Confpassword');
        obj.type = 'password';
    }
</script>


@using (Html.BeginForm("UserRegister", "User"))
{
    // message if any
    if (!string.IsNullOrEmpty(@Model.message))
    {
        <div class='@(Model.type==1?"alert alert-success":(Model.type==-1?"alert alert-danger":"alert alert-info"))' role="alert" style="text-align:center;margin-top:30px">
            @Model.message
        </div>
    }

    @Html.AntiForgeryToken()
    <body>

        <div class="container" style="margin-top:30px;">
            <form method="post">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <!-- First Name -->
                <label class="control-label">
                    @Html.LabelFor(Model => Model.UserFirstName)
                </label>
                <div class="input-group form-group required">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                    @Html.EditorFor(Model => Model.UserFirstName,
                        new
                        {
                            htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name", @maxlength = 50 }
                        })
                    @Html.ValidationMessageFor(Model => Model.UserFirstName, "", new { @class = "text-danger" })
                </div>

                <!-- Last Name -->
                <label class="control-label">
                    @Html.LabelFor(Model => Model.UserLastName)
                </label>
                <div class="input-group form-group required">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                    @Html.EditorFor(Model => Model.UserLastName,
                        new
                        {
                            htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last Name", @maxlength = 50 }
                        })
                    @Html.ValidationMessageFor(Model => Model.UserLastName, "", new { @class = "text-danger" })
                </div>

                <!-- User Login ID -->
                <label class="control-label">
                    @Html.LabelFor(Model => Model.UserLogInID)
                </label>
                <div class="input-group form-group required">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                    @Html.EditorFor(Model => Model.UserLogInID,
                        new
                        {
                            htmlAttributes = new { @class = "form-control", @placeholder = "Enter LogIn ID", @maxlength = 50 }
                        })

                    @Html.ValidationMessageFor(Model => Model.UserLogInID, "", new { @class = "text-danger" })
                </div>

                <!-- Password -->
                <label class="control-label">
                    @Html.LabelFor(Model => Model.UserPassword)
                </label>
                <div class="input-group form-group required">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock" onmouseover="mouseoverPass();" onmouseout="mouseoutPass();"></i></span>
                    @Html.EditorFor(Model => Model.UserPassword,
                        new
                        {
                            htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password", @id = "password", @type = "password" }
                        })
                    @Html.ValidationMessageFor(Model => Model.UserPassword, "", new { @class = "text-danger" })
                </div>

                <!-- Confirm Password-->
                <label class="control-label">
                    @Html.LabelFor(Model => Model.ConfirmPassword)
                </label>
                <div class="input-group form-group required">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock" onmouseover="mouseoverConfPass();" onmouseout="mouseoutConfPass();"></i></span>
                    @Html.EditorFor(Model => Model.ConfirmPassword,
                        new
                        {
                            htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password", @id = "Confpassword", @type = "password" }
                        })
                    @Html.ValidationMessageFor(Model => Model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>


                <!-- Birth -->
                <label class="control-label">
                    @Html.LabelFor(Model => Model.UserBirth)
                </label>
                <div class="input-group form-group required">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.EditorFor(Model => Model.UserBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.UserBirth, "", new { @class = "text-danger" })
                </div>



                <!-- Email -->
                @Html.LabelFor(Model => Model.UserEmail)
                <div class="input-group form-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-send"></i></span>
                    @Html.EditorFor(Model => Model.UserEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email", @maxlength = 100 } })
                </div>

                <!-- Phone-->
                @Html.LabelFor(Model => Model.UserPhone)
                <div class="input-group form-group">
                    <span></span>
                    <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                    @Html.EditorFor(Model => Model.UserPhone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Phone Number", @maxlength = 10 } })
                    @Html.ValidationMessageFor(Model => Model.UserPhone, "", new { @class = "text-danger" })
                </div>

                <!-- submit button -->
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>

            <!-- button to redirect to log in page-->
            @Html.ActionLink("Cancel", "UserLogIn", "User", null, new { @class = "btn btn-danger" })
        </div>
    </body>
}