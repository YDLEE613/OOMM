@using BootcampTraineeDBObjects.Util;

@model RestaurantListUtil

@{ 
    List<string> AUTHRoles = new List<string>() { "Admin" };
    string CurrRole = Session["AUTHRole"] as string;
}
<body>
    <div class="container" style="margin-top:30px;">
        <!-- table for list of restaurants with detail and remove button-->
        @{
            WebGrid grid = new WebGrid(null, ajaxUpdateContainerId: "grid", rowsPerPage: Model.PageSize);
            grid.Bind(Model.RestaurantList, autoSortAndPage: true, rowCount: Model.PageSize);
        }
        <div id="gridContainer">
            <div id="grid">
                <!-- if user's role is Admin -->
                @if (AUTHRoles.Contains(CurrRole))
                {
                    @grid.GetHtml(tableStyle: "table table-ordered", htmlAttributes: new { @id = "restaurant-list" },
                             mode: WebGridPagerModes.All,

                             // Pagination
                             firstText: "<< First",
                             previousText: "< Prev",
                             nextText: "Next >",
                             lastText: "Last >>",

                             // add columns with headers and format values inside the grid
                             columns: grid.Columns(
                                grid.Column("", "No.", format: item => item.WebGrid.Rows.IndexOf(item) + 1),
                                grid.Column("", "", format: @<input type="hidden" name="RestaurantIDPK" value="@item.RestaurantIDPK">),
                                grid.Column("RestaurantName", "Name", format: @<strong>@Html.ActionLink((string)item.RestaurantName, "RestaurantProfile", "Restaurant", new { id = @item.RestaurantIDPK }, new { @style = "color:black" })</strong>),
                                grid.Column("DayofWeek", "Day"),
                                grid.Column("Contact", "Phone"),
                                grid.Column("AverageRating", "Score"),
                                grid.Column("IsActive", "Status", format: @<text>@(item.IsActive == 1 ? @Html.Raw("<strong>Active</strong>") : @Html.Raw("Not Active"))</text>),
                                grid.Column("", "", format:@<text>@Html.ActionLink("Detail", "RestaurantProfile", "Restaurant", new { id = @item.RestaurantIDPK }, new { @class = "btn btn-primary btn-sm" })
                                                                      @Html.ActionLink("Remove", "RestaurantRemove", "Restaurant", new { id = @item.RestaurantIDPK }, new { @class = "btn btn-danger btn-sm", onclick= "return confirm('Are you sure to remove this restaurant?');"  })</text>)))
                }
                else
                {
                    <!-- if user's role is manager-->
                    @grid.GetHtml(tableStyle: "table table-ordered",
                             mode: WebGridPagerModes.All,

                             // Pagination
                             firstText: "<< First",
                             previousText: "< Prev",
                             nextText: "Next >",
                             lastText: "Last >>",

                             // add columns with headers and format values inside the grid
                             columns: grid.Columns(
                                grid.Column("", "No.", format: item => item.WebGrid.Rows.IndexOf(item) + 1),
                                grid.Column("", "", format: @<input type="hidden" name="RestaurantIDPK" value="@item.RestaurantIDPK">),
                                grid.Column("RestaurantName", "Name", format: @<strong>@Html.ActionLink((string)item.RestaurantName, "RestaurantProfile", "Restaurant", new { id = @item.RestaurantIDPK }, new { @style = "color:black" })</strong>),
                                grid.Column("DayofWeek", "Day"),
                                grid.Column("Contact", "Phone"),
                                grid.Column("AverageRating", "Score"),
                                grid.Column("IsActive", "Status", format: @<text>@(item.IsActive == 1 ? @Html.Raw("<strong>Active</strong>") : @Html.Raw("Not Active"))</text>),
                                grid.Column("", "", format:@<text>@Html.ActionLink("Detail", "RestaurantProfile", "Restaurant", new { id = @item.RestaurantIDPK }, new { @class = "btn btn-primary btn-sm" })</text>)))
                }

            </div>
        </div>

        <!-- button to write a post -->
        <div class="form-group col-xs-6">
            @Html.ActionLink("Register", "RestaurantRegister", "Restaurant", null, new { @type = "button", @class = "btn btn-primary btn-block", @style = "padding:2px; height:26px;" })
        </div>

        <!-- search bar for list of restaurants-->
        <div style="text-align:center;">
            @using (Html.BeginForm("RestaurantList", "Restaurant", FormMethod.Get))
            {
                <input type="text" name="searchString" id="searchString" maxlength="20"/>
                <input class="btn btn-primary btn-sm" type="submit" id="btnSearch" value="Search" />

                @Html.ActionLink("Reset", "RestaurantList", "Restaurant", null, new { @type = "button", @class = "btn btn-primary btn-sm" })
            }
        </div>
    </div>
</body>

