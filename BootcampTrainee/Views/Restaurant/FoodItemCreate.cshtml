@using BootcampTrainee.Models.SubModel

@model FoodItem

<div class="food-item-modal">
    <!-- Header -->
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" onclick="reload()" aria-hidden="true">X</button>
        <h4 class="modal-title" id="myFoodItemModalLabel">Add Food Item</h4>
    </div>
    <hr />

    <!-- body -->
    <div class="modal-body">
        <form id="foodItemForm">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(Model => Model.RestaurantIDFK)
            @Html.HiddenFor(Model => Model.IsSandwichRestaurant)

            <!-- Food Name -->
            @Html.LabelFor(Model => Model.FoodItemName)
            <div class="form-group">
                @Html.EditorFor(Model => Model.FoodItemName, new { htmlAttributes = new { @id = "food-name", @class = "form-control", @maxlength = "25" } })
                @Html.ValidationMessageFor(Model => Model.FoodItemName, "", new { @class = "text-danger" })
            </div>

            <!-- Food type or Ingredient.  Depends on if it is a sandwich restaurant-->
            @if (!Model.IsSandwichRestaurant)
            {
                <!-- Food type selection -->
                @Html.LabelFor(Model => Model.FoodTypeSelected)
                <div class="form-group">
                    @Html.DropDownListFor(Model => Model.FoodTypeSelected,
                                          new SelectList(Model.FoodTypeList, "FoodTypeIDPK", "FoodTypeName"), "Choose one",
                                          new { @id = "FoodTypeID", @class = "form-control" })
                </div>

                <!-- Food price -->
                @Html.LabelFor(Model => Model.Price)
                <div class="form-group">
                    @Html.EditorFor(Model => Model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(Model => Model.Price, "", new { @class = "text-danger" })
                </div>
            }
            else
            {
                <!-- Food type selection: Sandwich -->
                @Html.HiddenFor(Model => Model.FoodTypeSelected, new { @Value = Model.FoodTypeList.Where(type => type.FoodTypeName == "Sandwich").ToList()[0].FoodTypeIDPK })

                <!-- Food ingredient selection -->
                @Html.LabelFor(Model => Model.IngredientTypeSelected)
                <div class="form-group">
                    @Html.DropDownListFor(Model => Model.IngredientTypeSelected,
                                          new SelectList(Model.IngredientTypeList, "IngredientTypeIDPK", "IngredientTypeName"), "Choose One",
                                          new { @id = "IngredientTypeID", @class = "form-control" })
                    @*@Html.ValidationMessageFor(Model=>Model.IngredientTypeSelected, "", new { @class="text-danger"})*@
                </div>

                <!-- Food price is fixed per an order-->
            }

            <!-- Food Description -->
            @Html.LabelFor(Model => Model.Description)
            <div class="form-group">
                @Html.EditorFor(Model => Model.Description, new { htmlAttributes = new { @class = "form-control", @id = "food-description", maxlength = "50" } })
            </div>



        </form>
    </div>

    <!-- Footer -->
    <div class="modal-footer" style="text-align:center;">
        <button type="button" class="btn btn-primary" id="btnSubmit" value="Submit">Sumbit</button>
    </div>
</div>
<!-- Call ajax post-->
<script>
    // function to reload page if modal is close
     function reload() {
            location.reload();
    }

    $(document).ready(function () {
        // click trigger 
        $('#btnSubmit').click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("FoodItemCreate","Restaurant")',
                data: $('#foodItemForm').serialize(),
                dataType: 'json',
                success: function (data) {

                    // refresh page
                    if (data.success == true) {
                        //location.reload();
                        alert("Submitted!");
                        $('form :input').val('');
                    } else {
                        alert("Please Fill information properly.");
                    }
                },
                failure: function () {
                    alert("Please Try Again.")
                    location.reload();
                },
                error: function (request, error) {
                    alert("Please Try Later.")
                    //alert("code:" + request.status + "\n" + "message:" + request.responseText + "\n" + "error:" + error)
                    location.reload();
                }
            })
        })
    })
</script>