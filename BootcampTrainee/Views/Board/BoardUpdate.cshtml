@model BootcampTrainee.Models.Board

@{
    string RoleAdmin = "Admin";
    string RoleManager = "Manager";

    // Roles that can remove posts written by other users
    List<string> AUTHRoles = new List<string>() { RoleAdmin, RoleManager };

    // current user
    string CurrRole = (string)Session["AUTHRole"];
}
<head>
    <!-- For Text Editor -->
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
</head>
@using (Html.BeginForm("BoardUpdate", "Board"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.BoardIDPK)
        @Html.HiddenFor(model => model.CategoryIDFK)
        @Html.HiddenFor(model => model.UserIDFK)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.DateModified)

        <!-- Title -->
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Category -->
        <div class="form-group">
            @Html.LabelFor(@Model => Model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(@Model => Model.CategoryIDFK, 1) @Html.Label("Codes")
                @Html.RadioButtonFor(@Model => Model.CategoryIDFK, 2) @Html.Label("Info")
            </div>
        </div>

        <!-- Is Fixed -->
        @if (AUTHRoles.Contains(CurrRole))
        {
            <div class="form-group">
                @Html.LabelFor(@Model => Model.IsFixed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(@Model => Model.IsFixed, 0) @Html.Label("No")
                    @Html.RadioButtonFor(@Model => Model.IsFixed, 1) @Html.Label("Yes")
                </div>
            </div>
        }

        <!-- Content -->
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(@Model => Model.Content, new { @class = "form-control", @type = "textarea", @id = "board-content", })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Button -->
        <div class="form-group">
            <div class="col-md-offset-6 col-md-5">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel", "BoardView", new { @id = Model.BoardIDPK }, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
    <script>
        // replace textarea with editor
        CKEDITOR.replace('board-content')
    </script>
}

